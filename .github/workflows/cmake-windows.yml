name: CMake-Windows

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
      branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  SDL_VERSION: 2.0.16

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: submodules-init
      # You may pin to the exact commit or the version.
      uses: snickerbockers/submodules-init@v4
      
    - name: sync submodules to master
      shell: powershell
      run: git submodule foreach git pull origin master
    
    - name: Download SDL sources
      shell: powershell
      run: Invoke-WebRequest -Uri "https://libsdl.org/release/SDL2-devel-${{env.SDL_VERSION}}-VC.zip" `
                             -OutFile ${{github.workspace}}/libs/SDL2-devel-${{env.SDL_VERSION}}-VC.zip

    - name: Unzip sources
      shell: cmd
      run: |
        cd ${{github.workspace}}/libs
        7z x -y SDL2-devel-${{env.SDL_VERSION}}-VC.zip
        del SDL2-devel-${{env.SDL_VERSION}}-VC.zip
      
    - name: Move SDL2 sources to correct folder
      shell: powershell
      run: |
        Move-Item -Path ${{github.workspace}}/libs/SDL2-${{env.SDL_VERSION}}/lib -Destination ${{github.workspace}}/libs/SDL_windows/ -force
        Move-Item -Path ${{github.workspace}}/libs/SDL2-${{env.SDL_VERSION}}/include -Destination ${{github.workspace}}/libs/SDL_windows/ -force
        cd ${{github.workspace}}/libs/SDL_windows
        ls

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -D WINDOWS=1

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
